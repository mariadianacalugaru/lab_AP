version: "3.8"

services:
  nginx:
    build: "./containers/nginx"
    container_name: "nginx_reverse_proxy"
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./ssl:/etc/nginx/certs/
    networks:
      - app
    
  node1:
    build: "./containers/node"
    container_name: "node1"
    ports:
      - 8080:3000
    volumes:
      - ./containers/node:/app
    networks:
      - app
      - database
      - rabbit
      
  node2:
    build: "./containers/node"
    container_name: "node2"
    ports:
      - 8081:3000
    volumes:
      - ./containers/node:/app
    networks:
      - app
      - database
      - rabbit

  node3:
    build: "./containers/node"
    container_name: "node3"
    ports:
      - 8082:3000
    volumes:
      - ./containers/node:/app
    networks:
      - app
      - database
      - rabbit

  angular:
    build: "./containers/angular"
    container_name: "angular"
    ports:
      - 9000:3000
    volumes:
      - ./containers/angular/angular-docker:/app/angular-docker
    networks:
      - app

  mongodb:
    image: mongo:6-jammy
    container_name: "mongo"
    ports:
      - '27017:27017'
    volumes:
      - ./containers/mongo/datamongo:/data/db
    networks:
      - database
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    
  rabbitmq:
    image: rabbitmq:3-management
    container_name: "rabbitmq"
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - rabbit

networks:
  app:
  database:
  rabbit:
  